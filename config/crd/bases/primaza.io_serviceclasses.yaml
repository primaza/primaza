---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: serviceclasses.primaza.io
spec:
  group: primaza.io
  names:
    kind: ServiceClass
    listKind: ServiceClassList
    plural: serviceclasses
    singular: serviceclass
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceClass is the Schema for the serviceclasses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceClassSpec defines the desired state of ServiceClass
            properties:
              constraints:
                description: Constraints defines under which circumstances the ServiceClass
                  may be used.
                properties:
                  environments:
                    description: Environments defines the environments that the RegisteredService
                      may be used in.
                    items:
                      type: string
                    type: array
                type: object
              healthCheck:
                description: HealthCheck sets the default health check for generated
                  registered services
                properties:
                  container:
                    description: Container defines a container that will run a check
                      against the ServiceEndpointDefinition to determine connectivity
                      and access.
                    properties:
                      command:
                        description: Command to execute in the container to run the
                          test
                        type: string
                      image:
                        description: Container image with the client to run the test
                        type: string
                    required:
                    - command
                    - image
                    type: object
                required:
                - container
                type: object
              resource:
                description: Resource defines the resource type to be used to convert
                  into Registered Services
                properties:
                  apiVersion:
                    description: APIVersion of the underlying service resource
                    type: string
                  kind:
                    description: Kind of the underlying service resource
                    type: string
                  serviceEndpointDefinitionMapping:
                    description: ServiceEndpointDefinitionMapping defines how a key-value
                      mapping projected into services may be constructed.
                    items:
                      properties:
                        jsonPath:
                          description: JsonPath defines where data lives in the service
                            resource.  This query must resolve to a single value (e.g.
                            not an array of values).
                          type: string
                        name:
                          description: Name of the data referred to
                          type: string
                      required:
                      - jsonPath
                      - name
                      type: object
                    type: array
                required:
                - apiVersion
                - kind
                - serviceEndpointDefinitionMapping
                type: object
              serviceClassIdentity:
                description: ServiceClassIdentity defines a set of attributes that
                  are sufficient to identify a service class.  A ServiceClaim whose
                  ServiceClassIdentity field is a subset of a RegisteredService's
                  keys can claim that service.
                items:
                  description: ServiceClassIdentityItem defines an attribute that
                    is necessary to identify a service class.
                  properties:
                    name:
                      description: Name of the service class identity attribute.
                      type: string
                    value:
                      description: Value of the service class identity attribute.
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
            required:
            - resource
            - serviceClassIdentity
            type: object
          status:
            description: ServiceClassStatus defines the observed state of ServiceClass
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
